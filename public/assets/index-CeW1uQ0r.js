const A=/#/g,C=/&/g,P=/\//g,d=/=/g,h=/\+/g,g=/%5e/gi,L=/%60/gi,O=/%7c/gi,Q=/%20/gi;function b(t){return encodeURI(""+t).replace(O,"|")}function a(t){return b(typeof t=="string"?t:JSON.stringify(t)).replace(h,"%2B").replace(Q,"+").replace(A,"%23").replace(C,"%26").replace(L,"`").replace(g,"^").replace(P,"%2F")}function s(t){return a(t).replace(d,"%3D")}function p(t=""){try{return decodeURIComponent(""+t)}catch{return""+t}}function T(t){return p(t.replace(h," "))}function w(t){return p(t.replace(h," "))}function I(t=""){const e={};t[0]==="?"&&(t=t.slice(1));for(const o of t.split("&")){const n=o.match(/([^=]+)=?(.*)/)||[];if(n.length<2)continue;const c=T(n[1]);if(c==="__proto__"||c==="constructor")continue;const r=w(n[2]||"");e[c]===void 0?e[c]=r:Array.isArray(e[c])?e[c].push(r):e[c]=[e[c],r]}return e}function N(t,e){return(typeof e=="number"||typeof e=="boolean")&&(e=String(e)),e?Array.isArray(e)?e.map(o=>`${s(t)}=${a(o)}`).join("&"):`${s(t)}=${a(e)}`:s(t)}function U(t){return Object.keys(t).filter(e=>t[e]!==void 0).map(e=>N(e,t[e])).filter(Boolean).join("&")}const j=/^[\s\w\0+.-]{2,}:([/\\]{1,2})/,S=/^[\s\w\0+.-]{2,}:([/\\]{2})?/,K=/^([/\\]\s*){2,}[^/\\]/;function $(t,e={}){return typeof e=="boolean"&&(e={acceptRelative:e}),e.strict?j.test(t):S.test(t)||(e.acceptRelative?K.test(t):!1)}function H(t,e){const o=B(t),n={...I(o.search),...e};return o.search=U(n),G(o)}const R=Symbol.for("ufo:protocolRelative");function B(t="",e){const o=t.match(/^[\s\0]*(blob:|data:|javascript:|vbscript:)(.*)/i);if(o){const[,u,f=""]=o;return{protocol:u.toLowerCase(),pathname:f,href:u+f,auth:"",host:"",search:"",hash:""}}if(!$(t,{acceptRelative:!0}))return l(t);const[,n="",c,r=""]=t.replace(/\\/g,"/").match(/^[\s\0]*([\w+.-]{2,}:)?\/\/([^/@]+@)?(.*)/)||[],[,i="",E=""]=r.match(/([^#/?]*)(.*)?/)||[],{pathname:_,search:y,hash:m}=l(E.replace(/\/(?=[A-Za-z]:)/,""));return{protocol:n.toLowerCase(),auth:c?c.slice(0,Math.max(0,c.length-1)):"",host:i,pathname:_,search:y,hash:m,[R]:!n}}function l(t=""){const[e="",o="",n=""]=(t.match(/([^#?]*)(\?[^#]*)?(#.*)?/)||[]).splice(1);return{pathname:e,search:o,hash:n}}function G(t){const e=t.pathname||"",o=t.search?(t.search.startsWith("?")?"":"?")+t.search:"",n=t.hash||"",c=t.auth?t.auth+"@":"",r=t.host||"";return(t.protocol||t[R]?(t.protocol||"")+"//":"")+c+r+e+o+n}export{U as s,H as w};
